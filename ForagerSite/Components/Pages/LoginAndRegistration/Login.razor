@page "/"
@using ForagerSite.Services;
@using ForagerSite.Models;
@using Microsoft.AspNetCore.Components.Routing
@inject UserService userService
@rendermode InteractiveServer
@inject NavigationManager navigationManager

<PageTitle>Login</PageTitle>

<h3>Login</h3>

<div>
    <div>
        <EditForm Model="@userViewModel" OnValidSubmit="_HandleValidSubmit" FormName="userLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <label for="UserNameInput">Username</label>
            <InputText id="UserNameInput" @bind-Value="@userViewModel.userSecurity.UssUsername"></InputText>
            <ValidationMessage For="@(() => userViewModel.userSecurity.UssUsername)" />

            <label for="PasswordInput">Password</label>
            <InputText id="PasswordInput" @bind-Value="@userViewModel.userSecurity.UssPassword" type="password"></InputText>
            <ValidationMessage For="@(() => userViewModel.userSecurity.UssPassword)" />

            <button type="submit" class="btn-primary">Login</button>    
        </EditForm>
    </div>
    @if (_errorMessage != null)
    {
        <p style="color: red;">@_errorMessage</p>
    }

    <div>
        <NavLink href="/Registration">Register</NavLink>
        <NavLink href="/RecoverLoginInfo">Forgot Username or Password?</NavLink>
    </div>
</div>

@code {

    private bool _userAuthenticated;

    private string _errorMessage;

    public UserViewModel userViewModel = new UserViewModel();

    private bool _UserAuthenticated(UserViewModel userViewModel)
    {
        var authenticatedUser = userService.AuthenticateUser(userViewModel.userSecurity.UssUsername, userViewModel.userSecurity.UssPassword);

        if (authenticatedUser != null)
        {
            userViewModel.user = authenticatedUser.user;
            userViewModel.userSecurity = authenticatedUser.userSecurity;
            return true;
        }

        return false;
    }

    private void _HandleValidSubmit(EditContext editContext)
    {

        var newUser = (UserViewModel)editContext.Model;
        _userAuthenticated = _UserAuthenticated(newUser);

        if (_userAuthenticated)
        {
            newUser.userSecurity.UssLastLoginDate = DateTime.Now;
            userService.UpdateUserSecurity(newUser.userSecurity);
            navigationManager.NavigateTo("/Home");
        }
        else
        {
            _errorMessage = "Username or password is incorrect";
            //StateHasChanged();
        }
    }
}
